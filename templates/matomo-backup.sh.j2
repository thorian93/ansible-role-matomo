#!/usr/bin/env bash
#
# Written by: Robin Gierse - info@thorian93.de - on 20170511
#
# Purpose:
# This is a backup script for Matomo.
#
# Version: 1.0 on 20170511
# Version: 1.1 on 20180906
# Version: 1.2 on 20200317
#
# Usage:
# ./matomo-backup.sh

set -e

# Variables:
matomo_path="{{ matomo_web_dir | default('/var/www/matomo') }}"
backup_target="{{ matomo_backup_dir | default('/tmp/matomo/backup') }}"
log_dir="{{ matomo_log_dir | default('/tmp/matomo/logs') }}"
logfile="$log_dir/backup.log"
exe_rsync="$(command -v rsync)"
opts_rsync="-Aavx"
exe_tar="$(command -v tar)"
opts_tar="-caf"
exe_mysqldump="$(command -v mysqldump)"
opts_mysqldump='--single-transaction'
database_name='{{ matomo_db_name }}'
database_host='localhost'
database_user='{{ mysql_backup_user }}'
database_pass='{{ mysql_backup_pw }}'

while getopts ":s:t:d:u:p:h" opt; do
  case $opt in
    s)
      matomo_path="${OPTARG%/}"
      ;;
    t)
      backup_target="${OPTARG%/}"
      ;;
    d)
      database_name="$OPTARG"
      ;;
    u)
      database_user="$OPTARG"
      ;;
    p)
      database_pass="$OPTARG"
      ;;
    h)
      print_help="true"
      ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      exit 1
      ;;
    :)
      echo "Option -$OPTARG requires an argument." >&2
      exit 1
      ;;
  esac
done

# Functions:

_initialize()
{
	echo "Backup started. $(date)"
    if [ ! -d "${backup_target}" ]
    then
        echo "Creating backup target: ${backup_target}"
        mkdir -p "${backup_target}"
    fi
    if [ ! -d "${matomo_path}" ]
    then
        echo 'No Matomo Installation found!' ; exit 1
    fi
    if [ -z "${database_name}" ]
    then
        echo 'No Matomo Database specified!' ; exit 1
    fi
	if [ ! -d $log_dir ]
	then
		mkdir -p $log_dir
	fi
	if [ ! -f $logfile ]
	then
		touch $logfile
	fi
	if [ ! -d "$backup_target/files" ]
	then
		mkdir -p "$backup_target/files"
	fi
	echo "$(date) - Ready to take off"
}

_backup_database()
{
	echo "$(date) - Dump Database."
	${exe_mysqldump} ${opts_mysqldump} "${database_name}" -h"${database_host}" -u"${database_user}" -p"${database_pass}" > $backup_target/matomo-sql.bak
	echo "$(date) - Done backing up Database."
}

_backup_files()
{
	echo "$(date) - Backing up $matomo_path..."
	${exe_rsync} ${opts_rsync} --log-file=$logfile $matomo_path "$backup_target/files"
	if [ "$?" == "0" ]
	then
		echo "$(date) - Done backing up $matomo_path..."
	else
		echo "$(date) - An error occurred during backup."
	fi
}

_finish () {
    echo "$(date) - Compress Backup"
    ${exe_tar} ${opts_tar} "${backup_target}.tar.gz" "${backup_target}" 2>&1
    echo "$(date) - All Done"
}

_help() {
    echo '#######################################################################################'
    echo '# -s    The source of the files. Referes to your webapp installation.                 #'
    echo '# -t    The target for the backup. Backup files will be created under this directory. #'
    echo '# -d    Database to backup.                                                           #'
    echo '# -u    Database user.                                                                #'
    echo '# -p    Database password.                                                            #'
    echo '# -h    Print this help message.                                                      #'
    echo '#######################################################################################'
}

# Main:
if [ "${print_help}" == "true" ]
then
  _help && exit 0
fi
_initialize
_backup_database
_backup_files
_finish
