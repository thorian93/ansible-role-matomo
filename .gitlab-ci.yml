---
variables:
  REPO_NAME: "ansible-role-matomo"
  GITHUB_REPO: "git@github.com:thorian93/${REPO_NAME}.git"
  GITLAB_REPO: "git@gitlab.com:thorian93_ansible/${REPO_NAME}.git"

stages:
  - cleanup
  - security
  - linting
  - deploy
  - finish

clean-build-area:
  stage: cleanup
  tags:
    - shell
  script:
    - rm -rf ./*
    - rm -rf ./.git/

secret-scan:
  stage: security
  tags:
    - shell
  script:
    - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@${GITLAB_HOST}/ansible/ansible-scripts.git scripts
    - ./scripts/secret-finder.sh

ansible-lint:
  stage: linting
  tags:
    - shell
  script:
    - ansible-lint ./

yaml-lint:
  stage: linting
  tags:
    - shell
  script:
    - yamllint ./

shell-lint:
  stage: linting
  tags:
    - shell
  script:
    - find ./ -name "*.sh" -exec shellcheck {} \;

github-deploy-master:
  stage: deploy
  tags:
    - shell
  script:
    - git remote set-url --push origin ${GITHUB_REPO}
    - git push origin HEAD:${CI_COMMIT_REF_NAME}
  only:
    - master

github-deploy-tags:
  stage: deploy
  tags:
    - shell
  script:
    - git remote set-url --push origin ${GITHUB_REPO}
    - git push origin ${CI_COMMIT_TAG}
  only:
    - tags
  except:
    - branches

gitlab-deploy-master:
  stage: deploy
  tags:
    - shell
  script:
    - git remote add gitlab ${GITLAB_REPO}
    - git push gitlab HEAD:${CI_COMMIT_REF_NAME}
  only:
    - master

gitlab-deploy-tags:
  stage: deploy
  tags:
    - shell
  script:
    - git remote add gitlab ${GITLAB_REPO}
    - git push gitlab ${CI_COMMIT_TAG}
  only:
    - tags
  except:
    - branches

open-issue:
  stage: finish
  tags:
    - shell
  script:
    - curl --silent --request POST --header "PRIVATE-TOKEN:${PRIVATE_TOKEN}" "${GITLAB_URL}/api/v4/projects/${CI_PROJECT_ID}/issues?title=Pipeline%20${CI_PIPELINE_ID}%20failed&assignee_ids=2&labels=bug"
  when: on_failure
